<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline type="view">
  <description>This pipeline pulls data from Bloomreach for the other services to process</description>
  <branch basename="_ANONYMOUS_BRANCH_1">
    <segment>
      <node>
        <text-node>
          <description>Fetches full content from BloomReach server and caches it for one day.</description>
        </text-node>
        <node-display x="0" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_2">
    <segment>
      <node>
        <text-node>
          <description>Parses Fetch to return the HTML for the specific widget requested.</description>
        </text-node>
        <node-display x="2" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="Fetch">
    <segment>
      <node>
        <start-node name="Fetch" secure="false"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="CurrentHttpParameterMap.isParameterSubmitted('usestatic')" condition-operator="expr"/>
        <node-display x="0" y="2"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="staticFetch"/>
              </interaction-node>
              <node-display x="0" y="2"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="getFullWidgetHTML"/>
        </interaction-node>
        <node-display x="1" y="2"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetWidget">
    <segment>
      <node>
        <start-node name="GetWidget" secure="false"/>
        <node-display x="2" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="dw.system.Site.current.preferences.custom.BR_Enable_Widget == true" condition-operator="expr">
          <description>If Thematic API is enabled, display theme.  Otherwise, follow redirect path as if BloomReach time's out</description>
        </decision-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="!empty(CurrentHttpParameterMap.type) ? CurrentHttpParameterMap.type.stringValue : ''" key="From_0"/>
                <key-binding alias="BRWidgetType" key="To_0"/>
                <key-binding alias="!empty(CurrentHttpParameterMap.accountID) ? CurrentHttpParameterMap.accountid.stringValue : ''" key="From_1"/>
                <key-binding alias="BRWidgetAccountID" key="To_1"/>
                <key-binding alias="!empty(CurrentHttpParameterMap.accountKey) ? CurrentHttpParameterMap.accountkey.stringValue : ''" key="From_2"/>
                <key-binding alias="BRWidgetAccountKey" key="To_2"/>
                <key-binding alias="!empty(CurrentHttpParameterMap.url) ? CurrentHttpParameterMap.url.stringValue : ''" key="From_3"/>
                <key-binding alias="BRWidgetURL" key="To_3"/>
                <key-binding alias="!empty(CurrentHttpParameterMap.userAgent) ? CurrentHttpParameterMap.useragent.stringValue : ''" key="From_4"/>
                <key-binding alias="BRWidgetUserAgent" key="To_4"/>
                <key-binding alias="!empty(CurrentHttpParameterMap.referrer) ? CurrentHttpParameterMap.referrer.stringValue : ''" key="From_5"/>
                <key-binding alias="BRWidgetReferrer" key="To_5"/>
                <key-binding alias="!empty(CurrentHttpParameterMap.pageType) ? CurrentHttpParameterMap.pagetype.stringValue : ''" key="From_6"/>
                <key-binding alias="BRWidgetPageType" key="To_6"/>
                <key-binding alias="!empty(CurrentHttpParameterMap.productID) ? CurrentHttpParameterMap.productid.stringValue : ''" key="From_7"/>
                <key-binding alias="BRWidgetProductID" key="To_7"/>
                <key-binding alias="!empty(CurrentHttpParameterMap.productName) ? CurrentHttpParameterMap.productname.stringValue : ''" key="From_8"/>
                <key-binding alias="BRWidgetProductName" key="To_8"/>
                <key-binding alias="!empty(CurrentHttpParameterMap.pageStatus) ? CurrentHttpParameterMap.pagestatus.stringValue : ''" key="From_9"/>
                <key-binding alias="BRWidgetPageStatus" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="getWidget"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="target" x="-1" y="-2"/>
          <bend-point relative-to="target" x="-1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="BRError_blank.isml"/>
        </interaction-node>
        <node-display orientation="horizontal" x="3" y="1"/>
      </node>
    </segment>
  </branch>
</pipeline>
