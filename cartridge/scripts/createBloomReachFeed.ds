/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*-   @input ExampleIn : String This is a sample comment.
*-   @output ExampleOut : Number
*
*	@output FeedFileName : String
*
*/
importPackage( dw.system );
importPackage( dw.io );
importPackage( dw.catalog );
importPackage( dw.util );
importPackage( dw.web );
importPackage( dw.content );
importScript( 'logBloomReachError.ds' );

function execute( args : PipelineDictionary ) : Number
{
	var brDir : File = new dw.io.File(File.IMPEX + '/bloomreach/');
	if(!brDir.exists()){ brDir.mkdirs();}

	var file : File = new dw.io.File(File.IMPEX + '/bloomreach/feed.xml');
	if(!file.exists()) 
		{
			if(!file.createNewFile())
			{
				logFailure("File "+file.name+" could not be created!");
				return false;
			}
		} 
	var fileWriter : FileWriter = new FileWriter(file, "UTF-8");
 	var xsw : XMLStreamWriter = new XMLStreamWriter(fileWriter);

	xsw.writeStartDocument();
 		xsw.writeStartElement("feed"); //<feed> 
 			xsw.writeAttribute("xmlns","http://www.w3.org/2005/Atom");
 			xsw.writeAttribute("xmlns:g","http://base.google.com/ns/1.0");
   			xsw.writeStartElement("title"); //  <title>
   				xsw.writeCharacters("Google Base data feed"); 
    		xsw.writeEndElement(); // </title>
    		xsw.writeStartElement("link"); // <link>
 				xsw.writeAttribute("href", "http://" + Site.getCurrent().getHttpHostName()); 
 				xsw.writeAttribute("rel", "self");
 			xsw.writeEndElement(); // 	</link>
    		xsw.writeStartElement("updated");//	<updated>
    			xsw.writeCharacters(Date());
    		xsw.writeEndElement();// </updated>
    		writeAllCatalogProducts(xsw);  /*Get all the products and create <entry/> elements*/
    	xsw.writeEndElement();// </feed>
    xsw.writeEndDocument();
 	xsw.close();
 	fileWriter.close();	

	var zipfile : File = new dw.io.File(File.IMPEX + '/bloomreach/feed' +  StringUtils.formatCalendar(Calendar(),'yyyyMMdd') + '.zip');
	if(!file.exists()) 
		{
			if(!file.createNewFile())
			{
				logFailure("File "+file.name+" could not be created!");
				return false;
			}
		} 
	file.zip(zipfile);
	file.remove();
	
	args.FeedFileName = zipfile.getName();
	
   return PIPELET_NEXT;
}

function writeAllCatalogProducts(xmlWriter : XMLStreamWriter)
{

	var products : SeekableIterator = ProductMgr.queryAllSiteProductsSorted();
	try
	{
		while(products.hasNext())
		{
			var product : Product = products.next();
			if (!(product.isMaster() && product.variationModel.variants.size() > 0) && !product.isProductSet())/*There is no need to send the parent product in the case of variations.  All info is on the children.*/
			{
				xmlWriter.writeStartElement("entry");
					xmlWriter.writeStartElement("title");
					xmlWriter.writeCData(product.getName());
					xmlWriter.writeEndElement();
					xmlWriter.writeStartElement("link");
					xmlWriter.writeAttribute("href",URLUtils.http('Product-Show', 'pid', product.ID));
					xmlWriter.writeEndElement();
					xmlWriter.writeStartElement("summary");
					xmlWriter.writeCData(product.getLongDescription());
					xmlWriter.writeEndElement();
					xmlWriter.writeStartElement("g:id");
					xmlWriter.writeCharacters(product.getID());
					xmlWriter.writeEndElement();
					xmlWriter.writeStartElement("g:price");
					xmlWriter.writeCharacters(product.getPriceModel().getPrice());
					xmlWriter.writeEndElement();
					xmlWriter.writeStartElement("g:availability");
					switch(product.getAvailabilityModel().getAvailabilityStatus())
					{
						case ProductAvailabilityModel.AVAILABILITY_STATUS_IN_STOCK :
						  	xmlWriter.writeCharacters("in stock");
						  	break;
						case ProductAvailabilityModel.AVAILABILITY_STATUS_PREORDER :
							xmlWriter.writeCharacters("preorder");
							break
						case ProductAvailabilityModel.AVAILABILITY_STATUS_BACKORDER :
							xmlWriter.writeCharacters("available for order");				
						  break;
						default:
							xmlWriter.writeCharacters("out of stock");
					}
					xmlWriter.writeEndElement();
					getProductCategories(xmlWriter,product);
					if(!empty(product.getBrand()))
					{
						xmlWriter.writeStartElement("g:brand");
						xmlWriter.writeCData(product.getBrand());
						xmlWriter.writeEndElement();
					}
					xmlWriter.writeStartElement("g:color");
					xmlWriter.writeEndElement();
					xmlWriter.writeStartElement("g:size");
					xmlWriter.writeEndElement();
					if(product.isVariant() && !product.isMaster())
					{
						xmlWriter.writeStartElement("g:item_group_id");
						xmlWriter.writeCharacters(product.getVariationModel().getMaster().getID())
						xmlWriter.writeEndElement();
					}
					xmlWriter.writeStartElement("g:image_link");
					if(product.getImage("large") != null)
					{
						/*If not using DW imaging, and URL contains '&', make sure to change the below to writeCData(URL) */
						xmlWriter.writeCharacters(product.getImage("large").absURL); 
					}
					xmlWriter.writeEndElement();
				xmlWriter.writeEndElement();
			}
		}
	}
	catch(e)
	{
		logFailure(e.toString());
	}
	products.close();
	
}

function getProductCategories(xmlWriter : XMLStreamWriter, product: Product)
{
	/*<g:product_type><![CDATA[Dress Shirts > Clothing > Mens]]></g:product_type>*/
		xmlWriter.writeStartElement("g:product_type");
		var category : dw.catalog.Category = null;
		var masterProduct : Product = product; // categories are on master products
		
		if(product.isVariant())
		{
			masterProduct = product.getVariationModel().getMaster(); 
		}
		category = masterProduct.getPrimaryCategory();
		if(category == null) // No primary category assigned
		{
			category = masterProduct.getClassificationCategory();
		}
		if(category == null) //no primary or classification category, use first category in list.  
		{
			category = masterProduct.getCategories()[0];
		}
		
		if(category != null)
		{
			var categoryString: String = "";
			while( category.parent != null )
			{
				if( category.online )
				{
					if(categoryString != "") 
					{
						categoryString += " > ";
					}
					categoryString += category.displayName;
				}
				category = category.parent;
			}
			xmlWriter.writeCData(categoryString);
		}
		xmlWriter.writeEndElement();
				
				
}

/*

- Should be the canonical URL.
- Each product should have a unique URL.
	If multiple products share the same URL, please let us know

7.3 Optional Fields

Field
Brand or Vendor
Color - e.g. red, blue
Gender - Female, Male, Unisex
Size - e.g. S/M/L, size 7, 8, etc.
Discounted Price - In addition to regular price
Shipping Info - Free shipping, ships in 2-3 days
Ratings or reviews
	e.g. Overall average rating, etc. 4 stars and/or
	Top 20 review 4+ stars
Availability/ Inventory
Description
*/









